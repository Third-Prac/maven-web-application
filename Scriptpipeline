node {
try{

def mavenHome = tool name: "maven3.8.5"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([cron('* * * * *')])])

stage('Checkoutcode'){
git branch: 'development', credentialsId: '2403871d-11a5-4960-bd70-915d7d84d98a', url: 'https://github.com/Third-Prac/maven-web-application.git'
}

stage('Buildpackage'){
sh "${mavenHome}/bin/mvn clean package"

}

stage('Sonarqube _report'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
stage('ArtifactRepository'){
sh "${mavenHome}/bin/mvn deploy"
}

stage('Tomcat'){
sshagent(['a274d37c-0073-481f-b811-b4f8d8acbd63']) {
    // some block
	sh"scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.233.166.180:/opt/apache-tomcat-9.0.65/webapps"

}
}
}
 catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


